/**
Beanshell script to demonstrate filtering AT records programatically.

It is executed within the data migration tool

@author Nathan Stevens
@version 1.1 02/25/2014

Specify the mapping functionality the script provides. change # to @ to 
specify that a certain record type is supported

#name
@resource
@note
#component

*/

// import the AT model classes
import org.archiviststoolkit.model.*;

// The result object that is recovered by the calling method in the 
// migration plugin
Boolean result = null;

// Method to check if a name record should be copied
canCopyName(name) {
	if(name.toString().contains("Test")) {
        result = false;
        print("Do not copy name >> " + name);
    } else {
    		result = true;
    }
}

// check to see if to copy resource record
canCopyResource(resource) {
	status = resource.getFindingAidStatus().trim();
	
	if(status.equals("Delete") || status.equals("Migration")) {
		print("Do not copy resource >> " + resource);
		result = false;
    } else {
    		result = true;
    }
}

// check to see if to copy resource component record
canCopyComponent(component) {
	title = component.getTitle();
	
	if(title.contains("C04-AT")) {
		print("Do not copy resource component >> " + component);
		result = false;
    } else {
    		result = true;
    }
}

// check to see if to copy a note record
canCopyNote(note) {
	result = true;
	noteTitle = note.getTitle();
	
	if(noteTitle.equalsIgnoreCase("Conditions Governing Access note")) {
		content = note.getNoteContent().toLowerCase();
		if(content.contains("no restrictions") || content.contains("restricted: no")) {
			print("Do not copy note >> " + note.getFullDescription());
			result = false;
		}
    }	
}

/*
 * This is where code execution starts by first checking that the record 
 * is not null. All methods being called must be above this point.
 */
if(record != null) {
    if (record instanceof Names) {
    		canCopyName(record);
    } else if(record instanceof Resources) {
    		canCopyResource(record);
    } else if(record instanceof ArchDescriptionNotes) {
    		canCopyNote(record);
    } else if(record instanceof ResourcesComponents) {
    		canCopyComponent(record);
    } else {
    		// just set the result to true since this record is not supported
    		print("Record not supported ... " + record);
    		result = true;
    }
}
